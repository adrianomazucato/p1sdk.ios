//
//  FacetecManager.swift
//  PartnerOneSDK
//
//  Created by Aller Allegro on 26/01/23.
//

import Foundation
import FaceTecSDK


open class FacetecManager{
    
    var partnerManager: PartnerManager
    
    private var latestExternalDatabaseRefID: String = ""
    
    //    private var latestSessionResult: FaceTecSessionResult!
    //    private var latestIDScanResult: FaceTecIDScanResult!
    //    private var sessionResult: FaceTecSessionResult?
    //
    //    private var resultCallback: FaceTecFaceScanResultCallback?
    
    private var latestProcessor: Processor!
    private var utils: SampleAppUtilities?
    
    public var faceScanBase64: String = ""
    
    var sessionId: String?
    var deviceKey: String?
    var transactionId: String?
    var processorResponse: (() -> Void)?
    
    init(parameterspartnerManager: PartnerManager) {
        self.partnerManager = parameterspartnerManager
    }
    
    func setupFaceTec(controller: UIViewController) {
        self.transactionId = partnerManager.transaction
        self.deviceKey = partnerManager.faceTecDeviceKeyIdentifier
        self.sessionId = partnerManager.sessionToken
        
        print("@! >>> Iniciando Facetec.")
        FaceTec.initialize()
        FacetecUtils.initializeFaceTecSDKFromAutogeneratedConfig(
            with: self.partnerManager.faceTecProductionKeyText,
            deviceKeyIdentifier: self.partnerManager.faceTecDeviceKeyIdentifier,
            faceScanEncryptionKey: self.partnerManager.faceTecPublicFaceScanEncryptionKey,
            completion: { [weak self] initializationSuccessful in
                
                guard let self = self else { return }
                
                if initializationSuccessful {
                    print("@! >>> Facetec inicializado com sucesso")
                    ThemeHelpers.setAppTheme(theme: "")
                    
                    let livenessProcessor = LivenessCheckProcessor(
                        sessionToken: self.partnerManager.sessionToken,
                        fromViewController: controller
                    )
                    
                    livenessProcessor.start()
                    
                    //self.faceTecLivenessData(completion: {})
                    
                    if self.partnerManager.wasProcessed == true {
                        print("@! >>> Foi processado!")
                    }
                    
                    //            self.processorResponse = {
                    //                if self.resultCallback?.onFaceScanGoToNextStep(scanResultBlob: "") != nil {
                    //                  print("BLOB!")
                    //                } else {
                    //                  self.navigationController?.popViewController(animated: true)
                    //                }
                    //            }
                } else {
                    print("@! >>> Erro ao inicializar Facetec:")
                }
            })
        
        
        
        
    }
    
}
