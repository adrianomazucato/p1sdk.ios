//
// FaceTec Device SDK config file.
// Auto-generated via the FaceTec SDK Configuration Wizard
//
import UIKit
import Foundation
import FaceTecSDK

open class Config {
  
  static let helper = PartnerHelper()
  static let font = UIFont.init(name: "SFProDisplay-Regular", size: UIFont.labelFontSize)
  
  public static var DeviceKeyIdentifier = helper.faceTecDeviceKeyIdentifier
  
  public static var PublicFaceScanEncryptionKey = helper.faceTecPublicFaceScanEncryptionKey
  
  public static var ProductionKeyText = helper.faceTecProductionKeyText
  
  static func displayLogs() {
    print("@! >>> FaceTec_DeviceKeyIdentifier: ", Config.DeviceKeyIdentifier)
    print("@! >>> FaceTec_PublicFaceScanEncryptionKey: ", Config.PublicFaceScanEncryptionKey)
    print("@! >>> FaceTec_ProductionKeyText: ", Config.ProductionKeyText)
  }
  
  // -------------------------------------
  // Convenience method to initialize the FaceTec SDK.
  // NOTE: This function is auto-populated by the FaceTec SDK Configuration Wizard based on the Keys issued to your Apps.
  static func initializeFaceTecSDKFromAutogeneratedConfig(completion: @escaping (Bool)->()) {
    FaceTec.sdk.initializeInProductionMode(productionKeyText: ProductionKeyText, deviceKeyIdentifier: Config.DeviceKeyIdentifier, faceScanEncryptionKey: Config.PublicFaceScanEncryptionKey, completion: { initializationSuccessful in
      completion(initializationSuccessful)
    })
  }
  
  // -------------------------------------
  // This app can modify the customization to demonstrate different look/feel preferences
  // NOTE: This function is auto-populated by the FaceTec SDK Configuration Wizard based on your UI Customizations you picked in the Configuration Wizard GUI.
  public static func retrieveConfigurationWizardCustomization() ->
      FaceTecCustomization {
          
          // For Color Customization
          let outerBackgroundColor = UIColor(hexString: "#283897")
          let frameColor = UIColor(hexString: "#283897")
          let borderColor = UIColor(hexString: "#283897")
          let ovalColor = UIColor(hexString: "#000000")
          let dualSpinnerColor = UIColor(hexString: "#e32b24")
          let textColor = UIColor(hexString: "#ffffff")
          let buttonAndFeedbackBarColor =  UIColor(hexString: "#e32b24")
          let buttonAndFeedbackBarTextColor = UIColor(hexString: "#ffffff")
          let buttonColorHighlight =  UIColor(hexString: "#396E99")
          let buttonColorDisabled =  UIColor(hexString: "#B9CCDE")
          let feedbackBackgroundLayer = CAGradientLayer.init()
          feedbackBackgroundLayer.colors = [buttonAndFeedbackBarColor.cgColor, buttonAndFeedbackBarColor.cgColor]
          feedbackBackgroundLayer.locations = [0,1]
          feedbackBackgroundLayer.startPoint = CGPoint.init(x: 0, y: 0)
          feedbackBackgroundLayer.endPoint = CGPoint.init(x: 1, y: 0)
          
          // For Frame Corner Radius Customization
          let frameCornerRadius: Int32 = 20
          let cancelImage = UIImage(named: "FaceTec_cancel")
          let cancelButtonLocation: FaceTecCancelButtonLocation = .topLeft

          // Set a default customization
          let defaultCustomization = FaceTecCustomization()
            
          //remover o audio
          defaultCustomization.vocalGuidanceCustomization.mode = .noVocalGuidance
          
          // Set Frame Customization
          defaultCustomization.frameCustomization.cornerRadius = frameCornerRadius
          defaultCustomization.frameCustomization.backgroundColor = frameColor
          defaultCustomization.frameCustomization.borderColor = borderColor

          // Set Overlay Customization
          defaultCustomization.overlayCustomization.brandingImage = nil
          defaultCustomization.overlayCustomization.backgroundColor = outerBackgroundColor

          // Set Guidance Customization
          defaultCustomization.guidanceCustomization.buttonCornerRadius = 30
          defaultCustomization.guidanceCustomization.backgroundColors = [frameColor, frameColor]
          defaultCustomization.guidanceCustomization.foregroundColor = textColor
          
          // customizar as fontes
          defaultCustomization.guidanceCustomization.buttonFont = Config.font!
          defaultCustomization.guidanceCustomization.headerFont = Config.font!
          defaultCustomization.guidanceCustomization.subtextFont = Config.font!
          defaultCustomization.guidanceCustomization.readyScreenHeaderFont = Config.font!
          defaultCustomization.guidanceCustomization.readyScreenSubtextFont = Config.font!
          defaultCustomization.guidanceCustomization.retryScreenHeaderFont = Config.font!
          defaultCustomization.guidanceCustomization.retryScreenSubtextFont = Config.font!
    
          defaultCustomization.guidanceCustomization.buttonBackgroundNormalColor = buttonAndFeedbackBarColor
          defaultCustomization.guidanceCustomization.buttonBackgroundDisabledColor = buttonColorDisabled
          defaultCustomization.guidanceCustomization.buttonBackgroundHighlightColor = buttonColorHighlight
          defaultCustomization.guidanceCustomization.buttonTextNormalColor = buttonAndFeedbackBarTextColor
          defaultCustomization.guidanceCustomization.buttonTextDisabledColor = buttonAndFeedbackBarTextColor
          defaultCustomization.guidanceCustomization.buttonTextHighlightColor = buttonAndFeedbackBarTextColor
          defaultCustomization.guidanceCustomization.retryScreenImageBorderColor = borderColor
          defaultCustomization.guidanceCustomization.retryScreenOvalStrokeColor = borderColor

          // Set Oval Customization
          defaultCustomization.ovalCustomization.strokeColor = ovalColor
          defaultCustomization.ovalCustomization.progressColor1 = dualSpinnerColor
          defaultCustomization.ovalCustomization.progressColor2 = dualSpinnerColor

          // Set Feedback Customization
          defaultCustomization.feedbackCustomization.backgroundColor = feedbackBackgroundLayer
          defaultCustomization.feedbackCustomization.textColor = buttonAndFeedbackBarTextColor
          defaultCustomization.feedbackCustomization.textFont = Config.font!

          // Set Cancel Customization
          defaultCustomization.cancelButtonCustomization.customImage = cancelImage
          defaultCustomization.cancelButtonCustomization.location = cancelButtonLocation

          // Set Result Screen Customization
          defaultCustomization.resultScreenCustomization.backgroundColors = [frameColor, frameColor]
          defaultCustomization.resultScreenCustomization.foregroundColor = textColor
          defaultCustomization.resultScreenCustomization.activityIndicatorColor = buttonAndFeedbackBarColor
          defaultCustomization.resultScreenCustomization.resultAnimationBackgroundColor = buttonAndFeedbackBarColor
          defaultCustomization.resultScreenCustomization.resultAnimationForegroundColor = buttonAndFeedbackBarTextColor
          defaultCustomization.resultScreenCustomization.uploadProgressFillColor = buttonAndFeedbackBarColor
          defaultCustomization.resultScreenCustomization.messageFont = Config.font!
          
          // Set Security Watermark Customization
          defaultCustomization.securityWatermarkImage = .faceTec

          // Set ID Scan Customization
          defaultCustomization.idScanCustomization.selectionScreenBackgroundColors = [frameColor, frameColor]
          defaultCustomization.idScanCustomization.selectionScreenForegroundColor = textColor
          defaultCustomization.idScanCustomization.reviewScreenBackgroundColors = [frameColor, frameColor]
          defaultCustomization.idScanCustomization.reviewScreenForegroundColor = buttonAndFeedbackBarTextColor
          defaultCustomization.idScanCustomization.reviewScreenTextBackgroundColor = buttonAndFeedbackBarColor
          defaultCustomization.idScanCustomization.captureScreenForegroundColor = buttonAndFeedbackBarTextColor
          defaultCustomization.idScanCustomization.captureScreenTextBackgroundColor = buttonAndFeedbackBarColor
          defaultCustomization.idScanCustomization.buttonBackgroundNormalColor = buttonAndFeedbackBarColor
          defaultCustomization.idScanCustomization.buttonBackgroundDisabledColor = buttonColorDisabled
          defaultCustomization.idScanCustomization.buttonBackgroundHighlightColor = buttonColorHighlight
          defaultCustomization.idScanCustomization.buttonTextNormalColor = buttonAndFeedbackBarTextColor
          defaultCustomization.idScanCustomization.buttonTextDisabledColor = buttonAndFeedbackBarTextColor
          defaultCustomization.idScanCustomization.buttonTextHighlightColor = buttonAndFeedbackBarTextColor
          defaultCustomization.idScanCustomization.captureScreenBackgroundColor = frameColor
          defaultCustomization.idScanCustomization.captureFrameStrokeColor = borderColor

          return defaultCustomization
  }
  
  public static func retrieveLowLightConfigurationWizardCustomization() -> FaceTecCustomization {
      
      // For Color Customization
      let outerBackgroundColor = UIColor(hexString: "#ffffff")
      let frameColor = UIColor(hexString: "#ffffff")
      let borderColor = UIColor(hexString: "#ffffff")
      let ovalColor = UIColor(hexString: "#000000")
      let dualSpinnerColor = UIColor(hexString: "#e32b24")
      let textColor = UIColor(hexString: "#ffffff")
      let buttonAndFeedbackBarColor =  UIColor(hexString: "#e32b24")
      let buttonAndFeedbackBarTextColor = UIColor(hexString: "#ffffff")
      let buttonColorHighlight =  UIColor(hexString: "#396E99")
      let buttonColorDisabled =  UIColor(hexString: "#B9CCDE")
      let feedbackBackgroundLayer = CAGradientLayer.init()
      feedbackBackgroundLayer.colors = [buttonAndFeedbackBarColor.cgColor, buttonAndFeedbackBarColor.cgColor]
      feedbackBackgroundLayer.locations = [0,1]
      feedbackBackgroundLayer.startPoint = CGPoint.init(x: 0, y: 0)
      feedbackBackgroundLayer.endPoint = CGPoint.init(x: 1, y: 0)
      
      // For Frame Corner Radius Customization
      let frameCornerRadius: Int32 = 20
      let cancelImage = UIImage(named: "FaceTec_cancel")
      let cancelButtonLocation: FaceTecCancelButtonLocation = .topLeft

      // Set a default customization
      let defaultCustomization = FaceTecCustomization()
        
      //remover o audio
      defaultCustomization.vocalGuidanceCustomization.mode = .noVocalGuidance
      
      // Set Frame Customization
      defaultCustomization.frameCustomization.cornerRadius = frameCornerRadius
      defaultCustomization.frameCustomization.backgroundColor = frameColor
      defaultCustomization.frameCustomization.borderColor = borderColor

      // Set Overlay Customization
      defaultCustomization.overlayCustomization.brandingImage = nil
//          defaultCustomization.overlayCustomization.backgroundColor = outerBackgroundColor

      // Set Guidance Customization
      defaultCustomization.guidanceCustomization.buttonCornerRadius = 30
      defaultCustomization.guidanceCustomization.backgroundColors = [frameColor, frameColor]
      defaultCustomization.guidanceCustomization.foregroundColor = textColor
      
      // customizar as fontes
      defaultCustomization.guidanceCustomization.buttonFont = Config.font!
      defaultCustomization.guidanceCustomization.headerFont = Config.font!
      defaultCustomization.guidanceCustomization.subtextFont = Config.font!
      defaultCustomization.guidanceCustomization.readyScreenHeaderFont = Config.font!
      defaultCustomization.guidanceCustomization.readyScreenSubtextFont = Config.font!
      defaultCustomization.guidanceCustomization.retryScreenHeaderFont = Config.font!
      defaultCustomization.guidanceCustomization.retryScreenSubtextFont = Config.font!

      defaultCustomization.guidanceCustomization.buttonBackgroundNormalColor = buttonAndFeedbackBarColor
      defaultCustomization.guidanceCustomization.buttonBackgroundDisabledColor = buttonColorDisabled
      defaultCustomization.guidanceCustomization.buttonBackgroundHighlightColor = buttonColorHighlight
      defaultCustomization.guidanceCustomization.buttonTextNormalColor = buttonAndFeedbackBarTextColor
      defaultCustomization.guidanceCustomization.buttonTextDisabledColor = buttonAndFeedbackBarTextColor
      defaultCustomization.guidanceCustomization.buttonTextHighlightColor = buttonAndFeedbackBarTextColor
      defaultCustomization.guidanceCustomization.retryScreenImageBorderColor = borderColor
      defaultCustomization.guidanceCustomization.retryScreenOvalStrokeColor = borderColor

      // Set Oval Customization
      defaultCustomization.ovalCustomization.strokeColor = ovalColor
      defaultCustomization.ovalCustomization.progressColor1 = dualSpinnerColor
      defaultCustomization.ovalCustomization.progressColor2 = dualSpinnerColor

      // Set Feedback Customization
      defaultCustomization.feedbackCustomization.backgroundColor = feedbackBackgroundLayer
      defaultCustomization.feedbackCustomization.textColor = buttonAndFeedbackBarTextColor
      defaultCustomization.feedbackCustomization.textFont = Config.font!

      // Set Cancel Customization
      defaultCustomization.cancelButtonCustomization.customImage = cancelImage
      defaultCustomization.cancelButtonCustomization.location = cancelButtonLocation

      // Set Result Screen Customization
      defaultCustomization.resultScreenCustomization.backgroundColors = [frameColor, frameColor]
      defaultCustomization.resultScreenCustomization.foregroundColor = textColor
      defaultCustomization.resultScreenCustomization.activityIndicatorColor = buttonAndFeedbackBarColor
      defaultCustomization.resultScreenCustomization.resultAnimationBackgroundColor = buttonAndFeedbackBarColor
      defaultCustomization.resultScreenCustomization.resultAnimationForegroundColor = buttonAndFeedbackBarTextColor
      defaultCustomization.resultScreenCustomization.uploadProgressFillColor = buttonAndFeedbackBarColor
      defaultCustomization.resultScreenCustomization.messageFont = Config.font!
      
      // Set Security Watermark Customization
      defaultCustomization.securityWatermarkImage = .faceTec

      // Set ID Scan Customization
      defaultCustomization.idScanCustomization.selectionScreenBackgroundColors = [frameColor, frameColor]
      defaultCustomization.idScanCustomization.selectionScreenForegroundColor = textColor
      defaultCustomization.idScanCustomization.reviewScreenBackgroundColors = [frameColor, frameColor]
      defaultCustomization.idScanCustomization.reviewScreenForegroundColor = buttonAndFeedbackBarTextColor
      defaultCustomization.idScanCustomization.reviewScreenTextBackgroundColor = buttonAndFeedbackBarColor
      defaultCustomization.idScanCustomization.captureScreenForegroundColor = buttonAndFeedbackBarTextColor
      defaultCustomization.idScanCustomization.captureScreenTextBackgroundColor = buttonAndFeedbackBarColor
      defaultCustomization.idScanCustomization.buttonBackgroundNormalColor = buttonAndFeedbackBarColor
      defaultCustomization.idScanCustomization.buttonBackgroundDisabledColor = buttonColorDisabled
      defaultCustomization.idScanCustomization.buttonBackgroundHighlightColor = buttonColorHighlight
      defaultCustomization.idScanCustomization.buttonTextNormalColor = buttonAndFeedbackBarTextColor
      defaultCustomization.idScanCustomization.buttonTextDisabledColor = buttonAndFeedbackBarTextColor
      defaultCustomization.idScanCustomization.buttonTextHighlightColor = buttonAndFeedbackBarTextColor
      defaultCustomization.idScanCustomization.captureScreenBackgroundColor = frameColor
      defaultCustomization.idScanCustomization.captureFrameStrokeColor = borderColor

      return defaultCustomization
  }
  
  public static func retrieveDynamicDimmingConfigurationWizardCustomization() -> FaceTecCustomization {
    return retrieveLowLightConfigurationWizardCustomization()
  }
  
  static var currentCustomization: FaceTecCustomization = retrieveConfigurationWizardCustomization()
  static var currentLowLightCustomization: FaceTecCustomization = retrieveLowLightConfigurationWizardCustomization()
  static var currentDynamicDimmingCustomization: FaceTecCustomization = retrieveDynamicDimmingConfigurationWizardCustomization()
  
  // -------------------------------------
  // Boolean to indicate the FaceTec SDK Configuration Wizard was used to generate this file.
  // In this Sample App, if this variable is true, a "Config Wizard Theme" will be added to this App's Design Showcase,
  // and choosing this option will set the FaceTec SDK UI/UX Customizations to the Customizations that you selected in the
  // Configuration Wizard.
  static let wasSDKConfiguredWithConfigWizard = false
}
